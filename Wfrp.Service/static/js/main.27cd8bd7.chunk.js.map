{"version":3,"sources":["components/Home.js","components/Login.js","store/reducer/index.js","App.js","index.js"],"names":["Home","useContext","AuthContext","state","dispatch","isLoggedIn","to","user","avatarUrl","name","publicRepos","followers","following","Wrapper","className","onClick","type","src","alt","Styled","section","Login","useState","errorMessage","isLoading","data","setData","client_id","redirect_uri","useEffect","url","window","location","href","includes","newUrl","split","history","pushState","requestData","code","proxy_url","fetch","method","headers","body","JSON","stringify","then","response","json","payload","catch","error","initialState","parse","localStorage","getItem","process","client_secret","REACT_APP_CLIENT_SECRET","reducer","action","setItem","clear","createContext","App","useReducer","Provider","value","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27cd8bd7.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Styled from \"styled-components\";\nimport { AuthContext } from \"../App\";\n\n\nexport default function Home() {\n  const { state, dispatch } = useContext(AuthContext);\n\n  if (!state.isLoggedIn) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  const { avatarUrl, name, publicRepos, followers, following } = state.user\n\n  const handleLogout = () => {\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  } \n\n  return (\n    <Wrapper>\n      <div className=\"container\">\n        <button onClick={()=> handleLogout()}>Logout</button>\n        <div>\n          <div className=\"content\">\n            <img src={avatarUrl} alt=\"Avatar\"/>\n            <span>{name}</span>\n            <span>{publicRepos} Repos</span>\n            <span>{followers} Followers</span>\n            <span>{following} Following</span>\n          </div>\n        </div>\n      </div>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = Styled.section`\n.container{\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  font-family: Arial;\n\n  button{\n    all: unset;\n    width: 100px;\n    height: 35px;\n    margin: 10px 10px 0 0;\n    align-self: flex-end;\n    background-color: #0041C2;\n    color: #fff;\n    text-align: center;\n    border-radius: 3px;\n    border: 1px solid #0041C2;\n\n    &:hover{\n      background-color: #fff;\n      color: #0041C2;\n    }\n  }\n\n  >div{\n    height: 100%;\n    width: 100%;\n    display: flex;\n    font-size: 18px;\n    justify-content: center;\n    align-items: center;\n\n    .content{\n      display: flex;\n      flex-direction: column;\n      padding: 20px 100px;    \n      box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);\n      width: auto;\n  \n      img{\n        height: 150px;\n        width: 150px;\n        border-radius: 50%;\n      }\n  \n      >span:nth-child(2){\n        margin-top: 20px;\n        font-weight: bold;\n      }\n  \n      >span:not(:nth-child(2)){\n        margin-top: 8px;\n        font-size: 14px;\n      }\n  \n    }\n\n  }\n}\n`;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Styled from \"styled-components\";\nimport GithubIcon from \"mdi-react/GithubIcon\";\nimport { AuthContext } from \"../App\";\n\n\nexport default function Login() {\n  const { state, dispatch } = useContext(AuthContext);\n  const [data, setData] = useState({ errorMessage: \"\", isLoading: false });\n\n  const { client_id, redirect_uri } = state;\n\n  useEffect(() => {\n    // After requesting Github access, Github redirects back to your app with a code parameter\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\");\n\n    // If Github API returns the code parameter\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      window.history.pushState({}, null, newUrl[0]);\n      setData({ ...data, isLoading: true });\n\n      const requestData = {\n        code: newUrl[1]\n      };\n\n      const proxy_url = state.proxy_url + \"/signin\";\n\n      // Use code parameter and other parameters to make POST request to proxy_server\n      fetch(proxy_url, {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(requestData)\n      })\n        .then(response => response.json())\n        .then(data => {\n          dispatch({\n            type: \"LOGIN\",\n            payload: { user: data, isLoggedIn: true }\n          });\n        })\n        .catch(error => {\n          setData({\n            isLoading: false,\n            errorMessage: \"Sorry! Login failed\"\n          });\n        });\n    }\n  }, [state, dispatch, data]);\n\n  if (state.isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Wrapper>\n      <section className=\"container\">\n        <div>\n          <h1>Welcome</h1>\n          <span>Super amazing app</span>\n          <span>{data.errorMessage}</span>\n          <div className=\"login-container\">\n            {data.isLoading ? (\n              <div className=\"loader-container\">\n                <div className=\"loader\"></div>\n              </div>\n            ) : (\n              <>\n                {\n                  // Link to request GitHub access\n                }\n                <a\n                  className=\"login-link\"\n                  href={`https://github.com/login/oauth/authorize?scope=user&client_id=${client_id}&redirect_uri=${redirect_uri}&scope=user%20repo`}\n                  onClick={() => {\n                    setData({ ...data, errorMessage: \"\" });\n                  }}\n                >\n                  <GithubIcon />\n                  <span>Login with GitHub</span>\n                </a>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = Styled.section`\n  .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    font-family: Arial;\n    \n\n    > div:nth-child(1) {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);\n      transition: 0.3s;\n      width: 25%;\n      height: 45%;\n\n      > h1 {\n        font-size: 2rem;\n        margin-bottom: 20px;\n      }\n\n      > span:nth-child(2) {\n        font-size: 1.1rem;\n        color: #808080;\n        margin-bottom: 70px;\n      }\n\n      > span:nth-child(3) {\n        margin: 10px 0 20px;\n        color: red;\n      }\n\n      .login-container {\n        background-color: #000;\n        width: 70%;\n        border-radius: 3px;\n        color: #fff;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        > .login-link {\n          text-decoration: none;\n          color: #fff;\n          text-transform: uppercase;\n          cursor: default;\n          display: flex;\n          align-items: center;          \n          height: 40px;\n\n          > span:nth-child(2) {\n            margin-left: 5px;\n          }\n        }\n\n        .loader-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;          \n          height: 40px;\n        }\n\n        .loader {\n          border: 4px solid #f3f3f3;\n          border-top: 4px solid #3498db;\n          border-radius: 50%;\n          width: 12px;\n          height: 12px;\n          animation: spin 2s linear infinite;\n        }\n\n        @keyframes spin {\n          0% {\n            transform: rotate(0deg);\n          }\n          100% {\n            transform: rotate(360deg);\n          }\n        }\n      }\n    }\n  }\n`;\n","export const initialState = {\n  isLoggedIn: JSON.parse(localStorage.getItem(\"isLoggedIn\")) || false,\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  client_id: process.env.REACT_APP_CLIENT_ID,\n  redirect_uri: process.env.REACT_APP_REDIRECT_URI,\n  client_secret: process.env.REACT_APP_CLIENT_SECRET,\n  proxy_url: process.env.REACT_APP_PROXY_URL\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\": {\n      localStorage.setItem(\"isLoggedIn\", JSON.stringify(action.payload.isLoggedIn))\n      localStorage.setItem(\"user\", JSON.stringify(action.payload.user))\n      return {\n        ...state,\n        isLoggedIn: action.payload.isLoggedIn,\n        user: action.payload.user\n      };\n    }\n    case \"LOGOUT\": {\n      localStorage.clear()\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport { initialState, reducer } from \"./store/reducer\";\n\n\nexport const AuthContext = createContext();\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        state,\n        dispatch\n      }}\n    >\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/\" component={Home}/>\n      </Switch>\n    </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}